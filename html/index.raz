<!DOCTYPE html>
<html lang="ru">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SDK | @Model.Title</title>
    @if(Model.jsonSteam != null){
        <link rel="icon" type="image/jpg" href="@Model.jsonSteam.avatarfull" />
    }else{
        <link rel="icon" type="image/jpg" href="https://freepngimg.com/save/97432-logo-chat-photos-download-free-image/512x512" />
    }
</head>

<body>
    <style>
        body{
            font-family: sans-serif;
        }
        .message {
            display: flex;
            flex-direction: row;
            align-items: center;
            font-size: 17px;
        }
        .nickname{
            text-decoration: none;
            color: black;
            margin-left: 15px;
        }
        .chat{
            width: 70%;
            display: flex;
            flex-direction: column;
        }
        .container{
            display: flex;
            flex-direction: row;

        }
        .list{
            display: flex;
            flex-direction: column;
            align-items: baseline;
            padding-left: 25px;
            gap: 20px;
        }
        .list .user{
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
            font-size: 19px;
        }
        .list .user img{
            width: 55px;
            border-radius: 15px;
        }
    </style>

    <div>
        @{
            var steam = Model.jsonSteam;
            var history = Model.history;
        }
        @if(steam == null){
            <a href="https://localhost:3000/api/auth/steam">Steam Авторизация</a>
        }

        @if(steam != null){
            <h4>Объект пользователя Steam: </h4>
            <br>
            <div>Никнейм: @steam.personaname</div>
            <br>
            <a href="@steam.profileurl" target="_blank">стим профиль: @steam.personaname</a>
            <br>
            <br>
            <span>Аватарка: </span>
            <img width="150px" src="@steam.avatarfull" alt="@steam.personaname">

            <button id="exit">Выход</button>
        }
    </div>

    <div class="container">
        <div class="chat">
            <h1>Чат в онлайн режиме</h1>
            <pre id="messages" style="height: 400px;overflow-y: scroll;display: flex;flex-direction: column;gap: 20px;"></pre>
                @if(steam != null) {
                    <input type="text" id="messageBox" placeholder="Пишите ваше сообщение здесь"
                    style="display: block; width:98%; margin-bottom: 10px; padding: 10px;" />
                    <button id="send" title="Отправить сообщение!" style="width: 100%; height: 30px;">Отправить сообщение</button>
                }else{
                    <a href="https://localhost:3000/api/auth/steam" style="display: inline-block; width: 100%; height: 30px; text-align: center;">Авторизуйтесь через Steam чтобы написать сообщение</a>
                }
        </div>
        <div class="onlineStatus">
            <h1>Кто онлайн</h1>
            <div id="list" class="list">
                
            </div>
        </div>
    </div>
    



    @if(history != null){
    <script>
        const sendBtn = document.querySelector('#send');
        const messages = document.querySelector('#messages');
        const messageBox = document.querySelector('#messageBox');
        function showHistoryMessage() {
                messages.innerHTML += `
                @for(var i = 0; i < history.length; i++){
                    var steamid = history[i].steamid;
                    var nickname = history[i].nickname;
                    var img = history[i].img;
                    var messages = history[i].messages;
                    <div class="message"><img width="50px" style="border-radius: 15px" src="@img" alt="@nickname"> <a class="nickname" href="https://steamcommunity.com/profiles/@steamid/" target="_blank">@nickname</a>: @messages</div>
                }
                `;
                messages.scrollTop = messages.scrollHeight;
                messageBox.value = '';
        }
        
        showHistoryMessage();
    </script>
    }
    else{
        <script>
            messages.innerHTML += `
                <div class="message" style="justify-content: center;">Ошибка подключение к базе данных, проверьте соединение!</div>
            `;
        </script>
    }
    @if(steam != null){
    <script>
        (function () {
            let ws;

            function showMessage(data) {
                // console.log(data);
                data = JSON.parse(data);
                // if (data.steamid != undefined) {
                let nickname = data.nickname;
                let img = data.img;
                let message = data.messages;
                messages.innerHTML += `<div class="message"><img width="50px" style="border-radius: 15px" src="${img}" alt="${nickname}"> <a class="nickname" href="https://steamcommunity.com/id/${nickname}">${nickname}</a>: ${message}</div>`;
                messages.scrollTop = messages.scrollHeight;
                messageBox.value = '';
                // }
                
            }

            const list = document.querySelector('#list');

            function updateOnlineStatus(data) {
                data = JSON.parse(data);

                list.textContent = '';

                for (let i = 0; i < data.users.length; i++) {
                    const userId = data.users[i][0];
                    let userElement = document.getElementById(userId);

                    if (!userElement) {
                        // Если нет, создаем новый элемент
                        userElement = document.createElement('div');
                        userElement.className = 'user';
                        userElement.id = userId;
                        userElement.innerHTML = `<img src="${data.users[i][1].img}" alt="${data.users[i][1].nickname}">${data.users[i][1].nickname}`;

                        list.appendChild(userElement);
                    } else {
                        userElement.innerHTML = `<img src="${data.users[i][1].img}" alt="${data.users[i][1].nickname}">${data.users[i][1].nickname}`;
                    }
            
                }
            }
            
            function getCookie(cName) {
                const name = cName + "=";
                const cDecoded = decodeURIComponent(document.cookie); //to be careful
                const cArr = cDecoded.split('; ');
                let res;
                cArr.forEach(val => {
                    if (val.indexOf(name) === 0) res = val.substring(name.length);
                })
                return res
            }

            function init() {
                if (ws) {
                    ws.onerror = ws.onopen = ws.onclose = null;
                    ws.close();
                }

                ws = new WebSocket('wss://localhost:3000');
                ws.onopen = () => {
                    console.log('Connection opened!');
                    ws.send(JSON.stringify({
                        "action": {
                            "steamid": '@steam.steamid',
                            "nickname": '@steam.personaname',
                            "img": '@steam.avatarfull'
                        }
                    }));
                }
                ws.onmessage = ({ data }) => {
                    let status = JSON.parse(data);
                    if(status.action == 'updateUsers'){
                        updateOnlineStatus(data);
                    }else{
                        showMessage(data);
                    }
                };
                ws.onclose = () => {
                    ws = null;
                }
            }

            sendBtn.onclick = function () {
                if (!ws) {
                    showMessage('Server', "No WebSocket connection :(");
                    return;
                }
                ws.send(JSON.stringify({
                    "steamid": '@steam.steamid',
                    "nickname" : '@steam.personaname',
                    "img": '@steam.avatarfull',
                    "messages": messageBox.value
                }));
                showMessage(JSON.stringify({
                    "steamid": '@steam.steamid',
                    "nickname" : '@steam.personaname',
                    "img": '@steam.avatarfull',
                    "messages": messageBox.value
                }));
            }

            window.addEventListener("beforeunload", function(event) {
                if (ws.readyState === WebSocket.OPEN) {
                    ws.send(JSON.stringify({ action: "logout", steamid: '@steam.steamid' }));
                    
                }
            });

            init();

            document.getElementById('exit').addEventListener('click', function() {
                document.cookie = 'access_token=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;';
                window.location.reload();
            });
        })();
    </script>
    }
</body>

</html>